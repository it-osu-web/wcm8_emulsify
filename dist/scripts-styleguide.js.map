{"version":3,"sources":["02-molecules/01-accordion-group/accordion-group.js","02-molecules/02-tab-group/tab-group.js","02-molecules/07-menus/main-menu/main-menu.js","01-atoms/02-text/02-blockquote/blockquote.js"],"names":["Drupal","behaviors","accordion","attach","context","settings","Array","prototype","slice","call","document","querySelectorAll","forEach","allowMultiple","hasAttribute","allowToggle","triggers","panels","addEventListener","event","target","classList","contains","isExpanded","getAttribute","active","querySelector","setAttribute","getElementById","removeAttribute","preventDefault","key","which","toString","ctrlModifier","ctrlKey","match","index","indexOf","direction","length","newIndex","focus","panel","expanded","tabs","el","tabNavigationLinks","tabContentContainers","activeIndex","handleClick","link","e","goToTab","remove","add","i","$","blockquote","find","each","pq_icon","hasClass","wrap","before","jQuery"],"mappings":"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","file":"scripts-styleguide.js","sourcesContent":["Drupal.behaviors.accordion = {\n  attach: function (context, settings) {\n\n  'use strict';\n  \n  Array.prototype.slice.call(document.querySelectorAll('.Accordion')).forEach(function (accordion) {\n  \n    // Allow for multiple accordion sections to be expanded at the same time\n    var allowMultiple = accordion.hasAttribute('data-allow-multiple');\n    // Allow for each toggle to both open and close individually\n    var allowToggle = (allowMultiple) ? allowMultiple : accordion.hasAttribute('data-allow-toggle');\n  \n    // Create the array of toggle elements for the accordion group\n    var triggers = Array.prototype.slice.call(accordion.querySelectorAll('.Accordion-trigger'));\n    var panels = Array.prototype.slice.call(accordion.querySelectorAll('.Accordion-panel'));\n  \n    accordion.addEventListener('click', function (event) {\n      var target = event.target;\n  \n      if (target.classList.contains('Accordion-trigger')) {\n        // Check if the current toggle is expanded.\n        var isExpanded = target.getAttribute('aria-expanded') == 'true';\n        var active = accordion.querySelector('[aria-expanded=\"true\"]');\n  \n        // without allowMultiple, close the open accordion\n        if (!allowMultiple && active && active !== target) {\n          // Set the expanded state on the triggering element\n          active.setAttribute('aria-expanded', 'false');\n          // Hide the accordion sections, using aria-controls to specify the desired section\n          document.getElementById(active.getAttribute('aria-controls')).setAttribute('hidden', '');\n  \n          // When toggling is not allowed, clean up disabled state\n          if (!allowToggle) {\n            active.removeAttribute('aria-disabled');\n          }\n        }\n  \n        if (!isExpanded) {\n          // Set the expanded state on the triggering element\n          target.setAttribute('aria-expanded', 'true');\n          // Hide the accordion sections, using aria-controls to specify the desired section\n          document.getElementById(target.getAttribute('aria-controls')).removeAttribute('hidden');\n  \n          // If toggling is not allowed, set disabled state on trigger\n          if (!allowToggle) {\n            target.setAttribute('aria-disabled', 'true');\n          }\n        }\n        else if (allowToggle && isExpanded) {\n          // Set the expanded state on the triggering element\n          target.setAttribute('aria-expanded', 'false');\n          // Hide the accordion sections, using aria-controls to specify the desired section\n          document.getElementById(target.getAttribute('aria-controls')).setAttribute('hidden', '');\n        }\n  \n        event.preventDefault();\n      }\n    });\n  \n    // Bind keyboard behaviors on the main accordion container\n    accordion.addEventListener('keydown', function (event) {\n      var target = event.target;\n      var key = event.which.toString();\n      // 33 = Page Up, 34 = Page Down\n      var ctrlModifier = (event.ctrlKey && key.match(/33|34/));\n  \n      // Is this coming from an accordion header?\n      if (target.classList.contains('Accordion-trigger')) {\n        // Up/ Down arrow and Control + Page Up/ Page Down keyboard operations\n        // 38 = Up, 40 = Down\n        if (key.match(/38|40/) || ctrlModifier) {\n          var index = triggers.indexOf(target);\n          var direction = (key.match(/34|40/)) ? 1 : -1;\n          var length = triggers.length;\n          var newIndex = (index + length + direction) % length;\n  \n          triggers[newIndex].focus();\n  \n          event.preventDefault();\n        }\n        else if (key.match(/35|36/)) {\n          // 35 = End, 36 = Home keyboard operations\n          switch (key) {\n            // Go to first accordion\n            case '36':\n              triggers[0].focus();\n              break;\n              // Go to last accordion\n            case '35':\n              triggers[triggers.length - 1].focus();\n              break;\n          }\n  \n          event.preventDefault();\n        }\n      }\n      else if (ctrlModifier) {\n        // Control + Page Up/ Page Down keyboard operations\n        // Catches events that happen inside of panels\n        panels.forEach(function (panel, index) {\n          if (panel.contains(target)) {\n            triggers[index].focus();\n  \n            event.preventDefault();\n          }\n        });\n      }\n    });\n  \n    // Minor setup: will set disabled state, via aria-disabled, to an\n    // expanded/ active accordion which is not allowed to be toggled close\n    if (!allowToggle) {\n      // Get the first expanded/ active accordion\n      var expanded = accordion.querySelector('[aria-expanded=\"true\"]');\n  \n      // If an expanded/ active accordion is found, disable\n      if (expanded) {\n        expanded.setAttribute('aria-disabled', 'true');\n      }\n    }\n  \n  });\n  \n  }\n};\n\n","Drupal.behaviors.tabs = {\n  attach: function (context, settings) {\n\n  'use strict';\n\n  var el = document.querySelectorAll('.tabs');\n  var tabNavigationLinks = document.querySelectorAll('.tabs__link');\n  var tabContentContainers = document.querySelectorAll('.tabs__tab');\n  var activeIndex = 0;\n\n  /**\n   * handleClick\n   * @description Handles click event listeners on each of the links in the\n   *   tab navigation. Returns nothing.\n   * @param {HTMLElement} link The link to listen for events on\n   * @param {Number} index The index of that link\n   */\n  var handleClick = function (link, index) {\n    link.addEventListener('click', function (e) {\n      e.preventDefault();\n      goToTab(index);\n    });\n  };\n\n  /**\n   * goToTab\n   * @description Goes to a specific tab based on index. Returns nothing.\n   * @param {Number} index The index of the tab to go to\n   */\n  var goToTab = function (index) {\n    if (index !== activeIndex && index >= 0 && index <= tabNavigationLinks.length) {\n      tabNavigationLinks[activeIndex].classList.remove('is-active');\n      tabNavigationLinks[index].classList.add('is-active');\n      tabContentContainers[activeIndex].classList.remove('is-active');\n      tabContentContainers[index].classList.add('is-active');\n      activeIndex = index;\n    }\n  };\n\n  /**\n   * init\n   * @description Initializes the component by removing the no-js class from\n   *   the component, and attaching event listeners to each of the nav items.\n   *   Returns nothing.\n   */\n  for (var e = 0; e < el.length; e++) {\n    el[e].classList.remove('no-js');\n  }\n\n  for (var i = 0; i < tabNavigationLinks.length; i++) {\n    var link = tabNavigationLinks[i];\n    handleClick(link, i);\n  }\n\n  }\n};\n\n","/**\n * @file\n * A JavaScript file containing the main menu functionality (small/large screen)\n *\n */\n\n/*\n// JavaScript should be made compatible with libraries other than jQuery by\n// wrapping it with an \"anonymous closure\". See:\n// - https://drupal.org/node/1446420\n// - http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth\n\n\n// (function (Drupal) { // UNCOMMENT IF DRUPAL.\n//\n//   Drupal.behaviors.mainMenu = {\n//     attach: function (context) {\n\n(function () { // REMOVE IF DRUPAL.\n\n  'use strict';\n\n  // Use context instead of document IF DRUPAL.\n  var toggle_expand = document.getElementById('toggle-expand');\n  var menu = document.getElementById('main-nav');\n  var expand_menu = menu.getElementsByClassName('expand-sub');\n\n  // Mobile Menu Show/Hide.\n  toggle_expand.addEventListener('click', function (e) {\n    toggle_expand.classList.toggle('toggle-expand--open');\n    menu.classList.toggle('main-nav--open');\n  });\n\n  // Expose mobile sub menu on click.\n  for (var i = 0; i < expand_menu.length; i++) {\n    expand_menu[i].addEventListener('click', function (e) {\n      var menu_item = e.currentTarget;\n      var sub_menu = menu_item.nextElementSibling;\n\n      menu_item.classList.toggle('expand-sub--open');\n      sub_menu.classList.toggle('main-menu--sub-open');\n    });\n  }\n\n})(); // REMOVE IF DRUPAL.\n\n// })(Drupal); // UNCOMMENT IF DRUPAL.\n*/\n","(function($) {\n  \n  Drupal.behaviors.blockquote = {\n    attach: function (context, settings) {\n\n      $(context).find('blockquote').each(function() {\n        \n        var pq_icon = '<div class=\"pulled-quote__icon\"><i class=\"fas fa-quote-left fa-3x\"></i></div>';\n\n        if($(this).hasClass('pulled-quote')){\n          $('.pulled-quote p').wrap('<div class=\"pulled-quote__text\"></div>');\n          $('.pulled-quote__text').before(pq_icon);\n        }\n        \n      }); \n    }\n  };\n\n})(jQuery);"]}